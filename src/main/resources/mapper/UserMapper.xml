<?xml version="1.0" encoding="UTF-8" ?>
  <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lgeek.app.mapper.UserMapper">
<select id="getUser" parameterType="String" resultMap="getMap">
		select * from user u left join shop s on u.s_id=s.s_id 
	</select>
	<select id="getUserByID" parameterType="String" resultMap="getMap">
		select * from user u left join shop s on u.s_id=s.s_id where u_id=#{id}
	</select>
	<resultMap type="com.lgeek.app.model.User" id="getMap">
		<id column="u_id" property="id" />
		<result column="u_name" property="name" />
		<result column="u_name" property="name" />
		<result column="u_password" property="password" />
		<result column="u_phone" property="phone" />
		<result column="u_email" property="email" />
		<result column="u_address" property="address" />
		<result column="u_age" property="age" />
		<result column="u_sex" property="sex" />
		<result column="u_money" property="money" />
		<result column="u_idcart" property="idcart" />
		<result column="u_position" property="position" />
		<association property="shop" javaType="com.lgeek.app.model.Shop">
			<id column="s_id" property="id" />
			<result column="s_name" property="name"/>
			<result column="flag" property="flag"/>
		</association>
		
	</resultMap>
	<resultMap type="com.lgeek.app.model.ReceiptAddress" id="getMap2">
		<id column="ra_name"  property="name"/>
		<result column="ra_address" property="address"/>
		<result column="ra_phone" property="phone"/>
		<result column="u_id" property="u_id"/>
	</resultMap>
	<insert id="addUser" parameterType="com.lgeek.app.model.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 01 14:11:40 CST 2018.
    -->
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        u_id,
      </if>
      <if test="name != null">
        u_name,
      </if>
      <if test="password != null">
        u_password,
      </if>
      <if test="phone != null">
        u_phone,
      </if>
      <if test="email != null">
        u_email,
      </if>
      <if test="address != null">
        u_address,
      </if>
      <if test="age != null">
        u_age,
      </if>
      <if test="sex != null">
        u_sex,
      </if>
      <if test="money != null">
        u_money,
      </if>
      <if test="idcart != null">
        u_idcart,
      </if>
      <if test="position != null">
        u_position,
      </if>
      <if test="createTime != null">
        u_createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=INTEGER},
      </if>
      <if test="idcart != null">
        #{idcart,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
	<insert id="register" parameterType="com.lgeek.app.model.User" >
		insert into user(u_id,u_name,u_password,u_phone,u_email,u_address,u_age,u_sex,u_money,u_idcart,u_position) 
		values(#{id},#{name},#{password},#{phone},#{email},#{address},#{age},#{sex},#{money},#{idcart},#{position})
	</insert>
	<delete id="deleteUser" parameterType="String">
		delete from USER  WHERE u_id=#{id}
	</delete>
	<insert id="addReceiptAddress" parameterType="com.lgeek.app.model.ReceiptAddress">
	 	insert into receiptAddress(ra_name,ra_phone,ra_address,u_id) values(#{name},#{phone},#{address},#{u_id})
	</insert>
	<select id="getReceiptAddress" parameterType="String" resultMap="getMap2">
		select * from receiptaddress where u_id=#{u_id}
	</select>
	<select id="getReceiptAddress1" parameterType="String" resultMap="getMap2">
		select * from receiptaddress where ra_id=#{ra_id}
	</select>
	<update id="editReceiptAddress" >
		update receiptaddress set ra_name=#{name},ra_phone=#{phone},ra_address=#{address} where ra_id=#{ra_id};
	</update>
	<insert id="addBuyDetails" parameterType="com.lgeek.app.model.BuyDetails">
	insert into buydetails(bd_order_id,bd_request,bd_state,bd_confirm,bd_delivery,bd_comment,bd_date,bd_quantity,bd_cost,bd_name,bd_phone,bd_address,u_id,p_id)
 values(#{orderId},#{request},#{state},#{confirm},#{delivery},#{comment},#{date},#{quantity},#{cost},#{name},#{phone},#{address},#{u_id},#{p_id})
	</insert>
	<update id="payment">
	 update user set u_money=#{money} where u_id=#{id}
	</update>
	<update id="payment1">
	update buydetails set bd_state=#{state} where u_id=#{id}
	</update>
	<update id="confirm">
	update buydetails set bd_confirm=#{confirm} where bd_id=#{id}
	</update>
	<insert id="comment">
	insert into comment(e_comment,e_starRating,bd_id) values(#{comment},#{star},#{bd_id})
	</insert>
	<insert id="comment1">
	update buydetails set bd_comment=#{comment} where bd_id=#{bd_id}
	</insert>
	<insert id="deleteAddress">
	delete from receiptaddress where ra_id=#{ra_id}
	</insert>
	<update id="modifyUser" parameterType="com.lgeek.app.model.User">
		update user set u_name=#{name},u_phone=#{phone},u_email=#{email},u_address=#{address},u_age=#{age},u_sex=#{sex},u_idcart=#{idcart} where u_id=#{id};
	</update>
	<update id="changePassword">
		update user set u_password=#{password} where u_id=#{u_id}
	</update>
	<select id="getSecretSecurity" resultType="com.lgeek.app.model.Secretsecurity">
		select * from secretsecurity where u_id=#{u_id}
	</select>
	<insert id="setSecretSecurity" parameterType="com.lgeek.app.model.Secretsecurity" >
		insert into secretsecurity values(#{u_id},#{question1},#{question2},#{question3},#{answer1},#{answer2},#{answer3})
	</insert>
	<update id="updateSecretSecurity" parameterType="com.lgeek.app.model.Secretsecurity">
		update secretsecurity set question1=#{question1},question2=#{question2},question3=#{question3},answer1=#{answer1},answer2=#{answer2},answer3=#{answer3} where u_id=#{u_id}
	</update>
	<select id="getShopsId" resultType="String">
		select s_id from shop 
	</select>
	<insert id="addShop" parameterType="com.lgeek.app.model.Shop">
		insert into shop(s_name,flag) values(#{name},#{flag})
	</insert>
	<update id="editShop" parameterType="com.lgeek.app.model.Shop">
		update shop set s_name = #{name} where s_id = #{id}
	</update>
	<update id="allotShop" >
		update user set s_id=#{s_id} where u_id=#{u_id};
	</update>
	<select id="getShops" parameterType="com.lgeek.app.model.Shop" resultMap="getShop">
		SELECT * FROM shop 
		<where>
			<if test="name!=null">
			and s_name like'${name}'
			</if>
			<if test="flag!=null">
			and flag='${flag}'
			</if>
			<if test="id !=null">
				and s_id = #{id}
			</if>
		</where>
	</select>
	<resultMap type="com.lgeek.app.model.Shop" id="getShop">
		<id column="s_id" property="id" />
		<result column="s_name" property="name" />
		<result column="flag" property="flag" />	
	</resultMap>
	<update id="approval" parameterType="String">
	update shop set flag=#{flag} where s_id=#{id}
	</update>
	<delete id="deleteProductByShopId" parameterType="String">
		DELETE FROM product WHERE s_id=#{s_id}
	</delete>
	<update id="deleteUserShop" parameterType="String">
		UPDATE USER SET s_id=NULL WHERE u_id=#{id}
	</update>
	<delete id="deleteShopById" parameterType="String">
		DELETE FROM shop WHERE s_id=#{s_id}
	</delete>
	
	<select id="getCategory" resultMap="getCategory" parameterType="com.lgeek.app.model.Category">
		select * from category 
		<where>
			<if test="name!=null">
			and ca_name = #{name}
			</if>
		</where>
		
	</select>
	<resultMap type="com.lgeek.app.model.Category" id="getCategory">
		<id column="ca_id" property="id" />
		<result column="ca_name" property="name" />
	</resultMap>
	<insert id="addCategory" parameterType="String">
	 	insert into category(ca_name) values(#{name})
	</insert>
	<update id="editCategory" parameterType="String">
	update category set ca_name=#{name} where ca_id=#{id}
	</update>
	<delete id="deleteCategoryById" parameterType="String">
		DELETE FROM category WHERE ca_id=#{ca_id}
	</delete>
	<select id="recharge" resultType="String" resultMap="getMap">
		select * from user u left join shop s on u.s_id=s.s_id  where u_position='User' and u_id like #{id}
	</select>
	<update id="recharge1">
	update user set u_money=#{money} where u_id=#{u_id}
	</update>
	
</mapper>
 